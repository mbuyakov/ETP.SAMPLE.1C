//Запись сообщения в очередь WebsphereMQ
Процедура ПоместитьДанныеВОчередьWSMQ(Данные, НазваниеМенеджераОчередей, НазваниеОчереди)
	
	// Определяем флаги
	MQOO_OUTPUT = 16;
	MQOO_FAIL_IF_QUIESCING = 8192;
	MQFMT_STRING = "MQSTR   ";
    CODESET_UTF = 1208;
	MQOO_INQUIRE = 32;
	
	Попытка
		
		// Подключаемся к менеджеру очереди
		Сессия = Новый COMОбъект("MQAX200.MQSession");
		ОпцииЗаписиСообщения = Новый COMОбъект("MQAX200.MQPutMessageOptions");
		МенеджерОчереди = Сессия.AccessQueueManager(НазваниеМенеджераОчередей);     
		
	Исключение
		
		Сообщить(" - Ошибка доступа к очереди: " + ОписаниеОшибки());
		Возврат;
		
	КонецПопытки;
	
	Попытка
		
		// Открываем очередь на запись
		Очередь = МенеджерОчереди.AccessQueue(НазваниеОчереди, MQOO_INQUIRE + MQOO_OUTPUT + MQOO_FAIL_IF_QUIESCING);
		
	Исключение
		
		Сообщить(" - Ошибка открытия очереди: " + ОписаниеОшибки());
		Возврат;
		
	КонецПопытки;
	
	Попытка
		
		// Создаем новое сообщение
	    Сообщение = Сессия.AccessMessage();
		Сообщение.Format = MQFMT_STRING;
        Сообщение.CharacterSet = CODESET_UTF;
		// Получаем текущую длину очереди
		КоличествоСообщенийВОчереди = Очередь.CurrentDepth;
		Сообщить(" - Количество сообщений в очереди " + НазваниеОчереди +": "+КоличествоСообщенийВОчереди);		
		// Записываем данные в сообщение, которое затем помещается в очередь
	    Сообщение.writeString(Данные);
		// Помещаем сообщение в очередь
		Очередь.Put(Сообщение,ОпцииЗаписиСообщения);
		// Освобождаем ресурсы
		Сообщение.ClearMessage();
	Исключение
		
		Сообщить(" - Ошибка размещения сообщения в очереди: " + ОписаниеОшибки());
		Возврат;
		
	КонецПопытки;
	Если Очередь <> Null Тогда 
		Очередь.Close();
	КонецЕсли; 
	Если МенеджерОчереди <> Null Тогда 
		МенеджерОчереди.Disconnect();
	КонецЕсли;
	
	Сообщить(" - Помещен файл в очередь " + НазваниеОчереди);
	
КонецПроцедуры

//Пример записи сообщения в очередь WebsphereMQ
ПоместитьДанныеВОчередьWSMQ("Мое чудесное сообщение","GU01QM","MOESK.STATUS_OUT"):

//Функция получения сообщения из очереди WebsphereMQ 
//Возвращает тело сообщения, в противном случае возвращает null;
Функция ПолучитьСообщениеИЗОчередиWSMQ(НазваниеМенеджераОчередей, НазваниеОчереди)
	
	// Определяем флаг
	MQOO_INPUT_AS_Q_DEF = 1;
	MQOO_INQUIRE = 32;
	
	Попытка
		
		// Подключаемся к менеджеру очереди
		Сессия = Новый COMОбъект("MQAX200.MQSession");
		ОпцииПолученияСообщения = Новый COMОбъект("MQAX200.MQPutMessageOptions");
		МенеджерОчереди = Сессия.AccessQueueManager(НазваниеМенеджераОчередей);     
		
	Исключение
		
		Сообщить(" - Ошибка доступа к очереди: " + ОписаниеОшибки());
		Возврат Null;
		
	КонецПопытки;
	
	// Открываем очередь для чтения из неё данных обмена
	Попытка
		
		Очередь = МенеджерОчереди.AccessQueue(НазваниеОчереди, MQOO_INPUT_AS_Q_DEF + MQOO_INQUIRE);
		
	Исключение
		
		Сообщить(" - Ошибка открытия очереди: " + ОписаниеОшибки());
		Возврат Null;
		
	КонецПопытки;
	
	Попытка
		КоличествоСообщенийВОчереди = Очередь.CurrentDepth;
		Сообщить(" - Количество сообщений в очереди " + НазваниеОчереди +": "+КоличествоСообщенийВОчереди);
		// Создаем сообщение
	    Сообщение = Сессия.AccessMessage();
		// получаем сообщение
    	Очередь.Get(Сообщение,ОпцииПолученияСообщения);

	Исключение
		
		Сообщить(" - Ошибка чтения данных из очереди: " + ОписаниеОшибки());
		Возврат Null;
		
	КонецПопытки;
	
	Если Очередь <> Null Тогда 
		Очередь.Close();
	КонецЕсли; 
	Если МенеджерОчереди <> Null Тогда 
		МенеджерОчереди.Disconnect();
	КонецЕсли;

	// Читаем из сообщения данные обмена и сохраняем их в файл
	Данные = Null;
	Если Сообщение <> Null Тогда 
		Данные = Сообщение.ReadString(Сообщение.MessageLength);
		Сообщение.ClearMessage();
	КонецЕсли;
    
	
	Сообщить(" - Принят файл обмена данными из очереди " + НазваниеОчереди);
	
	Возврат Данные;
		
КонецФункции

//Пример использования
МоеСообщение = ПолучитьСообщениеИЗОчередиWSMQ("GU01QM","MOESK.STATUS_OUT");